<?xml version="1.0" encoding="UTF-8"?>  
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns="http://java.sun.com/xml/ns/javaee"  
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"  
    version="3.0">  
    <display-name>Archetype Created Web Application</display-name>  
    <!-- Spring和mybatis的配置文件 -->  
    <context-param>  
        <param-name>contextConfigLocation</param-name>  
        <param-value>
            classpath*:spring-mybatis.xml
            classpath*:spring-cxf.xml    
        </param-value>  
        <!-- <param-value>classpath:spring-security.xml</param-value>  --> 
    </context-param>
    <!-- SpringSecurity 核心过滤器配置 -->  
    <!-- <filter>   
        <filter-name>springSecurityFilterChain</filter-name>    
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>    
    </filter>  
    <filter-mapping>  
        <filter-name>springSecurityFilterChain</filter-name>  
        <url-pattern>/*</url-pattern>    
    </filter-mapping>   --> 
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <!-- 编码过滤器 -->  
    <filter>  
        <filter-name>encodingFilter</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
        <async-supported>true</async-supported>  
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
    </filter>  
    <filter-mapping>  
        <filter-name>encodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
    <!-- Spring监听器 -->  
    <listener>  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
    </listener>  
    <!-- 防止Spring内存溢出监听器 -->  
    <listener>  
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  
    </listener>  
  
    <!-- Spring MVC servlet -->  
    <servlet>  
        <servlet-name>SpringMVC</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
        <init-param>  
            <param-name>contextConfigLocation</param-name>  
            <param-value>classpath*:spring-mvc.xml</param-value>  
        </init-param>  
        <load-on-startup>1</load-on-startup>  
        <async-supported>true</async-supported>  
    </servlet>  
    <servlet-mapping>  
        <servlet-name>SpringMVC</servlet-name>  
        <!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->  
        <url-pattern>/</url-pattern>  
    </servlet-mapping>
    
     <!--定义一个cxf的servlet-->
    <servlet>
        <servlet-name>CXFServlet</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/webservice/*</url-pattern>
    </servlet-mapping>
    
    <!-- shiro过滤器定义 -->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <!-- 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理 -->
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <!-- spring配置  不需要过滤的文件  -->
	<servlet-mapping>
	     <servlet-name>default</servlet-name>
	     <url-pattern>*.css</url-pattern>
	</servlet-mapping>	
	<servlet-mapping>
         <servlet-name>default</servlet-name>
         <url-pattern>*.woff2</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
         <servlet-name>default</servlet-name>
         <url-pattern>*.woff</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
         <servlet-name>default</servlet-name>
         <url-pattern>*.ttf</url-pattern>
    </servlet-mapping>	 
	<servlet-mapping>
	     <servlet-name>default</servlet-name>
	     <url-pattern>*.gif</url-pattern>
	</servlet-mapping>	     
	<servlet-mapping>
	      <servlet-name>default</servlet-name>
	      <url-pattern>*.jpg</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
          <servlet-name>default</servlet-name>
          <url-pattern>*.png</url-pattern>
    </servlet-mapping>	     
	<servlet-mapping>
	      <servlet-name>default</servlet-name>
	      <url-pattern>*.js</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
          <servlet-name>default</servlet-name>
          <url-pattern>*.map</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
          <servlet-name>default</servlet-name>
          <url-pattern>*.flash.swf</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
          <servlet-name>default</servlet-name>
          <url-pattern>*.html</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
          <servlet-name>default</servlet-name>
          <url-pattern>*.swf</url-pattern>
    </servlet-mapping>
    
    <error-page>
	   <error-code>417</error-code>
	   <location>/error/417.jsp</location>
    </error-page>
    <error-page>
      <error-code>418</error-code>
      <location>/error/418.jsp</location>
    </error-page>
    <error-page>
      <error-code>401</error-code>
      <location>/error/401.jsp</location>
    </error-page>
    <error-page>
      <error-code>500</error-code>
      <location>/error/500.jsp</location>
    </error-page>
    <error-page>
      <error-code>404</error-code>
      <location>/error/404.jsp</location>
    </error-page>
	   
    <welcome-file-list>  
        <welcome-file>/loginexp.jsp</welcome-file>  
    </welcome-file-list>  
  
</web-app>  
